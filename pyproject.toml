[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm[toml]>=7.0"]
build-backend = "setuptools.build_meta"

[project]
name = "clinical-survival-ml"
dynamic = ["version"]
description = "Clinical outcomes survival modeling pipeline"
readme = "README.md"
license = { text = "MIT" }
authors = [
  { name = "Clinical-Survival-ML Team" }
]
requires-python = ">=3.10"
dependencies = [
  "numpy>=1.24,<1.27",
  "pandas>=2.0,<2.3",
  "scikit-learn>=1.3,<1.5",
  "scikit-survival>=0.21,<0.22",
  "lifelines>=0.27,<0.28",
  "xgboost>=1.7,<2.0",
  "shap>=0.43,<0.44",
  "pyyaml>=6.0,<7.0",
  "jinja2>=3.1,<3.2",
  "matplotlib>=3.7,<3.9",
  "seaborn>=0.12,<0.14",
  "fastapi>=0.109,<0.111",
  "uvicorn[standard]>=0.23,<0.25"
]

[project.optional-dependencies]
gpu = [
  "cuml>=23.08,<24.12",
  "cudf>=23.08,<24.12",
  "dask-cuda>=23.08,<24.12",
  "dask[complete]>=2023.8,<2024.12"
]
dev = [
  "pytest==8.3.3",
  "pytest-cov==5.0.0",
  "ruff==0.6.8",
  "black==24.8.0",
  "mypy==1.11.2"
]
automl = [
  "optuna>=3.0,<4.0",
]

[project.scripts]
clinical-ml = "clinical_survival.cli.main:app"

[tool.pytest.ini_options]
addopts = "-ra --strict-markers --strict-config"
testpaths = ["tests"]

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP", "S", "RUF"]
ignore = ["E501", "S311"]

[tool.ruff.lint.isort]
known-first-party = ["clinical_survival"]

[tool.setuptools_scm]
write_to = "src/clinical_survival/_version.py"
